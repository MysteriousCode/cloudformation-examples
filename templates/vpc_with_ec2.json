{
    "Description": "Example Server",
    "Mappings": {
        "AMIMap": {
            "ap-northeast-1": {
                "AMI": "xxx"
            },
            "ap-northeast-2": {
                "AMI": "xxx"
            },
            "ap-south-1": {
                "AMI": "xxx"
            },
            "ap-southeast-1": {
                "AMI": "xxx"
            },
            "ap-southeast-2": {
                "AMI": "xxx"
            },
            "ca-central-1": {
                "AMI": "xxx"
            },
            "eu-central-1": {
                "AMI": "xxx"
            },
            "eu-west-1": {
                "AMI": "xxx"
            },
            "eu-west-2": {
                "AMI": "xxx"
            },
            "sa-east-1": {
                "AMI": "xxx"
            },
            "us-east-1": {
                "AMI": "xxx"
            },
            "us-east-2": {
                "AMI": "xxx"
            },
            "us-west-1": {
                "AMI": "xxx"
            },
            "us-west-2": {
                "AMI": "xxx"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Required parameters."
                    },
                    "Parameters": [
                        "DBPassword",
                        "KeyPair"
                    ]
                },
                {
                    "Label": {
                        "default": "Advanced: Database and instance"
                    },
                    "Parameters": [
                        "DBInstanceType",
                        "DBStorageSize",
                        "DBBackupRetention",
                        "EC2InstanceType"
                    ]
                }
            ],
            "ParameterLabels": {
                "DBBackupRetention": {
                    "default": "How long to keep backups (advanced)"
                },
                "DBInstanceType": {
                    "default": "Database instance class (advanced)"
                },
                "DBPassword": {
                    "default": "Choose a database password"
                },
                "DBStorageSize": {
                    "default": "Database storage (advanced)"
                },
                "EC2InstanceType": {
                    "default": "Instance class (advanced)"
                },
                "KeyPair": {
                    "default": "Choose a key pair"
                }
            }
        }
    },
    "Outputs": {
        "LoadBalancerDNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "LoadBalancer",
                    "DNSName"
                ]
            }
        }
    },
    "Parameters": {
        "DBBackupRetention": {
            "Default": "7",
            "Description": "Number of days to store automated daily database backups for.",
            "Type": "Number"
        },
        "DBInstanceType": {
            "AllowedValues": [
                "db.t2.micro",
                "db.t2.small",
                "db.t2.medium",
                "db.t2.large",
                "db.m4.large",
                "db.m4.xlarge",
                "db.m4.2xlarge",
                "db.m4.4xlarge",
                "db.m4.10xlarge"
            ],
            "Default": "db.t2.micro",
            "Description": "Instance class for your database. Defines amount of CPU and Memory.",
            "Type": "String"
        },
        "DBPassword": {
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z]).{8,}$",
            "ConstraintDescription": "Database password must be at least 8 characters, with 1 small letter, 1 large letter and 1 number. ",
            "Description": "Choose a secure password for your database with at least 1 small letter, 1 large letter, 1 number, minimal length: 8 characters.",
            "MinLength": 8,
            "NoEcho": true,
            "Type": "String"
        },
        "DBStorageSize": {
            "Default": "10",
            "Description": "Storage size for your database in GB.",
            "Type": "Number"
        },
        "EC2InstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Instance class for your server. Defines amount of CPU and Memory.",
            "Type": "String"
        },
        "KeyPair": {
            "Description": "Key pair to use to login to your instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "AutoScalingGroup": {
            "Properties": {
                "DesiredCapacity": 1,
                "HealthCheckGracePeriod": 300,
                "HealthCheckType": "ELB",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "LoadBalancer"
                    }
                ],
                "MaxSize": 10,
                "MetricsCollection": [
                    {
                        "Granularity": "1Minute"
                    }
                ],
                "MinSize": 1,
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "TerminationPolicies": [
                    "OldestLaunchConfiguration",
                    "ClosestToNextInstanceHour",
                    "Default"
                ],
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": 10,
                    "MinInstancesInService": 1,
                    "PauseTime": "PT30S",
                    "WaitOnResourceSignals": "false"
                }
            }
        },
        "DBSecurityGroup": {
            "Properties": {
                "GroupDescription": "Database security group",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "127.0.0.1/32",
                        "IpProtocol": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "FromPort": 3306,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Ref": "InstanceSecurityGroup"
                        },
                        "ToPort": 3306
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    " RDS security group"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "DBSubnetGroup": {
            "Properties": {
                "DBSubnetGroupDescription": "DB Subnet group",
                "SubnetIds": [
                    {
                        "Ref": "PrivateSubnet1"
                    },
                    {
                        "Ref": "PrivateSubnet2"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    " database subnet group"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::RDS::DBSubnetGroup"
        },
        "Database": {
            "DeletionPolicy": "Snapshot",
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "DBStorageSize"
                },
                "BackupRetentionPeriod": {
                    "Ref": "DBBackupRetention"
                },
                "DBInstanceClass": {
                    "Ref": "DBInstanceType"
                },
                "DBInstanceIdentifier": {
                    "Ref": "AWS::StackName"
                },
                "DBSubnetGroupName": {
                    "Ref": "DBSubnetGroup"
                },
                "Engine": "MySQL",
                "EngineVersion": "5.6",
                "MasterUserPassword": {
                    "Ref": "DBPassword"
                },
                "MasterUsername": "root",
                "MultiAZ": "true",
                "StorageType": "gp2",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "VPCSecurityGroups": [
                    {
                        "Ref": "DBSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::RDS::DBInstance"
        },
        "EC2HighCPUUsageAlarm": {
            "Properties": {
                "ActionsEnabled": "true",
                "AlarmActions": [
                    {
                        "Ref": "ScaleUPPolicy"
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "AutoScalingGroup"
                        }
                    }
                ],
                "EvaluationPeriods": 3,
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Period": 300,
                "Statistic": "Average",
                "Threshold": "70"
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "EC2LowCPUUsageAlarm": {
            "Properties": {
                "ActionsEnabled": "true",
                "AlarmActions": [
                    {
                        "Ref": "ScaleDOWNPolicy"
                    }
                ],
                "ComparisonOperator": "LessThanThreshold",
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "AutoScalingGroup"
                        }
                    }
                ],
                "EvaluationPeriods": 3,
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Period": 300,
                "Statistic": "Average",
                "Threshold": "20"
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "InstanceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "InstanceRolePolicy": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        }
                    ]
                },
                "PolicyName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "instance-policy"
                        ]
                    ]
                },
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "InstanceSecurityGroup": {
            "Properties": {
                "GroupDescription": "Instance security group",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "ToPort": 443
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 587,
                        "IpProtocol": "tcp",
                        "ToPort": 587
                    },
                    {
                        "CidrIp": "172.1.0.0/16",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "LoadBalancerSecurityGroup",
                                "GroupId"
                            ]
                        },
                        "ToPort": 80
                    },
                    {
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "LoadBalancerSecurityGroup",
                                "GroupId"
                            ]
                        },
                        "ToPort": 443
                    },
                    {
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                                "LoadBalancerSecurityGroup",
                                "GroupId"
                            ]
                        },
                        "ToPort": "-1"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    " instance security group"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-internet-gateway"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "LaunchConfiguration": {
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AMIMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceMonitoring": "true",
                "InstanceType": {
                    "Ref": "EC2InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "InstanceSecurityGroup",
                            "GroupId"
                        ]
                    }
                ]
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "LoadBalancer": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "ConnectionDrainingPolicy": {
                    "Enabled": true,
                    "Timeout": 300
                },
                "CrossZone": "true",
                "HealthCheck": {
                    "HealthyThreshold": "2",
                    "Interval": "30",
                    "Target": "HTTP:80/",
                    "Timeout": "10",
                    "UnhealthyThreshold": "3"
                },
                "Listeners": [
                    {
                        "InstancePort": "80",
                        "InstanceProtocol": "HTTP",
                        "LoadBalancerPort": "80",
                        "Protocol": "HTTP"
                    }
                ],
                "SecurityGroups": [
                    {
                        "Fn::GetAtt": [
                            "LoadBalancerSecurityGroup",
                            "GroupId"
                        ]
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet1"
                    },
                    {
                        "Ref": "PublicSubnet2"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
        },
        "LoadBalancerSecurityGroup": {
            "Properties": {
                "GroupDescription": "Loadbalancer security group",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "172.1.0.0/16",
                        "FromPort": 0,
                        "IpProtocol": "-1",
                        "ToPort": 65535
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "ToPort": 443
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "PrivateNetworkACL": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-private-nacl"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PrivateNetworkAclEntryIn": {
            "Properties": {
                "CidrBlock": "172.1.0.0/16",
                "Egress": "false",
                "NetworkAclId": {
                    "Ref": "PrivateNetworkACL"
                },
                "Protocol": -1,
                "RuleAction": "allow",
                "RuleNumber": 200
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateNetworkAclEntryOut": {
            "Properties": {
                "CidrBlock": "172.1.0.0/16",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PrivateNetworkACL"
                },
                "Protocol": -1,
                "RuleAction": "allow",
                "RuleNumber": 200
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "private-route-table"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.1.1.0/24",
                "MapPublicIpOnLaunch": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-private-subnet-1"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet1NetworkAclAssociation": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkACL"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrivateSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.1.2.0/24",
                "MapPublicIpOnLaunch": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-private-subnet-2"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet2NetworkAclAssociation": {
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateNetworkACL"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnet2RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public-route-table"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PublicSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.1.128.0/24",
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-public-subnet-1"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnet1RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "172.1.129.0/24",
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-public-subnet-2"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnet2RouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "RouteToInternet": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ScaleDOWNPolicy": {
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "MetricAggregationType": "Average",
                "PolicyType": "StepScaling",
                "StepAdjustments": [
                    {
                        "MetricIntervalUpperBound": 0,
                        "ScalingAdjustment": -1
                    }
                ]
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "ScaleUPPolicy": {
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "AutoScalingGroup"
                },
                "MetricAggregationType": "Average",
                "PolicyType": "StepScaling",
                "StepAdjustments": [
                    {
                        "MetricIntervalLowerBound": 0,
                        "ScalingAdjustment": 1
                    }
                ]
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": "172.1.0.0/16",
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "VPCS3Endpoint": {
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PublicRouteTable"
                    },
                    {
                        "Ref": "PrivateRouteTable"
                    }
                ],
                "ServiceName": {
                    "Fn::Join": [
                        "",
                        [
                            "com.amazonaws.",
                            {
                                "Ref": "AWS::Region"
                            },
                            ".s3"
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCEndpoint"
        }
    }
}
